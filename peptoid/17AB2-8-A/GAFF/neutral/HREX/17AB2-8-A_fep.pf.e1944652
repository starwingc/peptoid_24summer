
The following have been reloaded with a version change:
  1) gcc/4.8 => gcc/8.4.0

                      :-) GROMACS - mdrun_mpi, 2021.2 (-:

                            GROMACS is written by:
     Andrey Alekseenko              Emile Apol              Rossen Apostolov     
         Paul Bauer           Herman J.C. Berendsen           Par Bjelkmar       
       Christian Blau           Viacheslav Bolnykh             Kevin Boyd        
     Aldert van Buuren           Rudi van Drunen             Anton Feenstra      
    Gilles Gouaillardet             Alan Gray               Gerrit Groenhof      
       Anca Hamuraru            Vincent Hindriksen          M. Eric Irrgang      
      Aleksei Iupinov           Christoph Junghans             Joe Jordan        
    Dimitrios Karkoulis            Peter Kasson                Jiri Kraus        
      Carsten Kutzner              Per Larsson              Justin A. Lemkul     
       Viveca Lindahl            Magnus Lundborg             Erik Marklund       
        Pascal Merz             Pieter Meulenhoff            Teemu Murtola       
        Szilard Pall               Sander Pronk              Roland Schulz       
       Michael Shirts            Alexey Shvetsov             Alfons Sijbers      
       Peter Tieleman              Jon Vincent              Teemu Virolainen     
     Christian Wennberg            Maarten Wolf              Artem Zhmurov       
                           and the project leaders:
        Mark Abraham, Berk Hess, Erik Lindahl, and David van der Spoel

Copyright (c) 1991-2000, University of Groningen, The Netherlands.
Copyright (c) 2001-2019, The GROMACS development team at
Uppsala University, Stockholm University and
the Royal Institute of Technology, Sweden.
check out http://www.gromacs.org for more information.

GROMACS is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation; either version 2.1
of the License, or (at your option) any later version.

GROMACS:      mdrun_mpi, version 2021.2
Executable:   /gpfs/opt/apps/gromacs-2021.2/bin/mdrun_mpi
Data prefix:  /gpfs/opt/apps/gromacs-2021.2
Working dir:  /gpfs/work/tur54445/git/peptoid_24summer/peptoid/17AB2-8-A/GAFF/neutral/HREX
Command line:
  mdrun_mpi -deffnm HREMD -dhdl dhdl.xvg -replex 5000 -multidir state_0 state_1 state_2 state_3 state_4 state_5 -noappend

Compiled SIMD: SSE4.1, but for this host/run AVX_512 might be better (see
log).
Reading file HREMD.tpr, VERSION 2021.2 (single precision)
Reading file HREMD.tpr, VERSION 2021.2 (single precision)
Reading file HREMD.tpr, VERSION 2021.2 (single precision)
Reading file HREMD.tpr, VERSION 2021.2 (single precision)
Reading file HREMD.tpr, VERSION 2021.2 (single precision)
Reading file HREMD.tpr, VERSION 2021.2 (single precision)
Changing nstlist from 10 to 100, rlist from 1 to 1.039

Changing nstlist from 10 to 100, rlist from 1 to 1.039

This is simulation 1 out of 6 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 16 MPI processes
Changing nstlist from 10 to 100, rlist from 1 to 1.039

This is simulation 3 out of 6 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 16 MPI processes
This is simulation 2 out of 6 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 16 MPI processes
Changing nstlist from 10 to 100, rlist from 1 to 1.039

This is simulation 4 out of 6 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 16 MPI processes
Changing nstlist from 10 to 100, rlist from 1 to 1.039

This is simulation 0 out of 6 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 16 MPI processes
Changing nstlist from 10 to 100, rlist from 1 to 1.039


Non-default thread affinity set, disabling internal thread affinity
This is simulation 5 out of 6 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 16 MPI processes

Using 1 OpenMP thread per MPI process


Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity


Non-default thread affinity set, disabling internal thread affinity


Non-default thread affinity set, disabling internal thread affinityUsing 1 OpenMP thread per MPI processUsing 1 OpenMP thread per MPI process





Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process

starting mdrun '17AB2-8-A in acetonitrile'
starting mdrun '17AB2-8-A in acetonitrile'
500000 steps,   1000.0 ps.
500000 steps,   1000.0 ps.
starting mdrun '17AB2-8-A in acetonitrile'
500000 steps,   1000.0 ps.
starting mdrun '17AB2-8-A in acetonitrile'
500000 steps,   1000.0 ps.
starting mdrun '17AB2-8-A in acetonitrile'
500000 steps,   1000.0 ps.
starting mdrun '17AB2-8-A in acetonitrile'
500000 steps,   1000.0 ps.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.


Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 4.5%.
 The balanceable part of the MD step is 64%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.8%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %



Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 4.4%.
 The balanceable part of the MD step is 64%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.8%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %



Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 63%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.7%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %



Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 4.5%.
 The balanceable part of the MD step is 64%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.9%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %



Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 4.4%.
 The balanceable part of the MD step is 64%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.8%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %



Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 63%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.7%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %


GROMACS reminds you: "Do You Have Sex Maniacs or Schizophrenics or Astrophysicists in Your Family?" (Gogol Bordello)

